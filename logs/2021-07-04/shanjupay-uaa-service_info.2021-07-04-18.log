[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:18,128 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:18,148 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:18,158 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=uaa-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22220, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:18,752 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$59d8be43] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:18,861 INFO [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:20,404 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=uaa-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22220, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:20,597 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:20,608 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:20,617 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'jwt.yaml', group: 'COMMON_GROUP'
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:20,624 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'uaa-service.yaml', group: 'SHANJUPAY_GROUP'
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:20,625 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1360541835 {name='uaa-service.yaml', properties={spring.datasource.druid.url=jdbc:mysql://localhost:3306/shanjupay_uaa?serverTimezone=GMT%2B8&useSSL=false, server.servlet.context-path=/uaa, spring.datasource.druid.password=gt12z912, spring.datasource.druid.username=root}}, NacosPropertySource@363397863 {name='jwt.yaml', properties={siging-key=shanju123}}, NacosPropertySource@2021053848 {name='spring-boot-starter-druid.yaml', properties={spring.datasource.druid.max-active=20, spring.datasource.druid.min-idle=5, spring.datasource.druid.web-stat-filter.principal-cookie-name=admin, spring.datasource.druid.min-evictable-idle-time-millis=300000, spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver, spring.datasource.druid.test-on-return=false, spring.datasource.druid.time-between-eviction-runs-millis=60000, spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*, spring.datasource.druid.filters=config,stat,wall,log4j2, spring.datasource.druid.filter.stat.slow-sql-millis=1, spring.datasource.druid.test-on-borrow=true, spring.datasource.druid.stat-view-servlet.login-password=admin, spring.datasource.druid.validation-query=SELECT 1 FROM DUAL, spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*, spring.datasource.druid.web-stat-filter.session-stat-enable=false, spring.datasource.druid.test-while-idle=true, spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20, spring.datasource.druid.web-stat-filter.enabled=true, spring.datasource.druid.web-stat-filter.session-stat-max-count=1000, spring.datasource.druid.stat-view-servlet.reset-enable=false, spring.datasource.druid.filter.stat.log-slow-sql=true, spring.datasource.druid.web-stat-filter.url-pattern=/*, spring.datasource.druid.stat-view-servlet.allow=127.0.0.1,192.168.163.1, spring.datasource.druid.web-stat-filter.principal-session-name=admin, spring.datasource.druid.web-stat-filter.profile-enable=true, spring.datasource.password=gt12z912, spring.datasource.username=root, spring.datasource.druid.stat-view-servlet.deny=192.168.1.73, spring.datasource.druid.stat-view-servlet.login-username=admin, spring.datasource.druid.stat-view-servlet.enabled=true, spring.datasource.url=jdbc:mysql://localhost:3306/shanjupay_merchant_service?serverTimezone=GMT%2B8&useSSL=false, spring.datasource.druid.initial-size=5, spring.datasource.druid.pool-prepared-statements=true, spring.datasource.druid.aop-patterns=com.shanjupay.*.service.*, spring.datasource.type=com.alibaba.druid.pool.DruidDataSource, spring.datasource.druid.max-wait=60000}}, NacosPropertySource@1245593227 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:20,658 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:21,960 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:21,965 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:21,993 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:21,993 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:21,993 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:21,994 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:21,994 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:21,994 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:21,994 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:21,995 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:21,995 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:21,996 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:21,997 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:21,998 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:21,998 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:21,998 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:21,999 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:21,999 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:21,999 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:22,000 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:22,000 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:22,000 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:22,000 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:22,001 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:22,309 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:22,315 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:22,397 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 55ms. Found 0 repository interfaces.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:22,569 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:22,702 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:22,702 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:22,742 DEBUG [main][ClassPathScanningCandidateComponentProvider.java:437] - Identified candidate component class: file [C:\Users\Lenovo\IdeaProjects\shanjupay\shanjupay-uaa\shanjupay-uaa-service\target\classes\com\shanjupay\uaa\service\OauthClientDetailsServiceImpl.class]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:22,836 DEBUG [main][ClassPathScanningCandidateComponentProvider.java:437] - Identified candidate component class: file [C:\Users\Lenovo\IdeaProjects\shanjupay\shanjupay-uaa\shanjupay-uaa-service\target\classes\com\shanjupay\uaa\service\OauthClientDetailsServiceImpl.class]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:22,863 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:22,863 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'oauthClientDetailsServiceImpl': Generic bean: class [com.shanjupay.uaa.service.OauthClientDetailsServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\Lenovo\IdeaProjects\shanjupay\shanjupay-uaa\shanjupay-uaa-service\target\classes\com\shanjupay\uaa\service\OauthClientDetailsServiceImpl.class]] } were scanned under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:22,866 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:22,866 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:23,114 INFO [main][GenericScope.java:294] - BeanFactory id=ae80b025-88db-38cd-939c-3aa9e29bb895
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:23,177 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:23,375 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3dbebb46] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:23,534 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:23,556 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:23,564 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$c1800a4a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:23,591 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:23,619 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:23,640 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:23,649 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:23,651 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:23,652 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$33bfa6c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:23,662 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$c669af1c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:23,671 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:23,676 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:23,686 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$86aee8d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:23,696 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$7a79f19b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:23,716 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$56c84ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:23,728 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:23,732 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:25,233 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:25,242 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:25,271 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:25,276 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$52dd81a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:26,783 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:26,788 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:26,796 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:26,802 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:26,924 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:26,924 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:26,970 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,003 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,017 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$8b004d7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,036 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,047 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$c4d6497a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,058 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$99523ad7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,076 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$4b9efcf0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,087 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$6b5e2df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,095 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,103 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,118 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$2d815a0d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,139 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,148 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$7b5dd866] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,165 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,170 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,181 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,189 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,242 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,264 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,278 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$57f286da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,297 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,305 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,322 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,336 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,337 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,373 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,383 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,387 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,393 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:27,429 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$59d8be43] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:28,046 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 56020 (http)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:28,069 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-56020"]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:28,082 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:28,083 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:28,095 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_291\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Java\jdk1.8.0_291\bin;C:\MinGW\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64_win\compiler;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Node.js\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\ProgramData\chocolatey\bin;C:\Users\Lenovo\AppData\Local\Programs\Python\Python37;C:\Users\Lenovo\AppData\Local\Programs\Python\Python37\Scripts;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Roaming\npm;C:\windows\;C:\Users\Lenovo\anaconda3\Library\bin\graphviz;C:\Program Files\Pandoc\;D:\MySQL\MySQL Server 8.0\bin;D:\MySQL\maven\apache-maven-3.5.2-bin\apache-maven-3.5.2\bin;D:\MySQL\Git\cmd;D:\Node;D:\Yarn\bin\;C:\Users\Lenovo\IdeaProjects\shanjupay\shanjupay-web\project-juhezhifu-admin-vue\node_modules\.bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Roaming\npm;C:\windows\;C:\Program Files\JetBrains\PyCharm Community Edition 2020.3.3\bin;;C:\Users\Lenovo\AppData\Local\Yarn\bin;.]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:28,427 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:28,427 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 7755 ms
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,203 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,635 DEBUG [main][Log4j2Filter.java:132] - {conn-10001,procId-199} connected
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,646 DEBUG [main][Log4j2Filter.java:132] - {conn-10002,procId-200} connected
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,651 DEBUG [main][Log4j2Filter.java:132] - {conn-10003,procId-201} connected
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,658 DEBUG [main][Log4j2Filter.java:132] - {conn-10004,procId-202} connected
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,664 DEBUG [main][Log4j2Filter.java:132] - {conn-10005,procId-203} connected
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,671 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,873 DEBUG [main][InternalLoggerFactory.java:43] - Using SLF4J as the default logging framework
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,882 DEBUG [main][DefaultClientResources.java:109] - -Dio.netty.eventLoopThreads: 8
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,906 DEBUG [main][DefaultEventLoopGroupProvider.java:138] - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,952 DEBUG [main][ResourceLeakDetector.java:129] - -Dio.netty.leakDetection.level: simple
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,952 DEBUG [main][ResourceLeakDetector.java:130] - -Dio.netty.leakDetection.targetRecords: 4
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,959 DEBUG [main][PlatformDependent.java:955] - Platform: Windows
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,962 DEBUG [main][PlatformDependent0.java:395] - -Dio.netty.noUnsafe: false
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,963 DEBUG [main][PlatformDependent0.java:871] - Java version: 8
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,965 DEBUG [main][PlatformDependent0.java:120] - sun.misc.Unsafe.theUnsafe: available
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,966 DEBUG [main][PlatformDependent0.java:144] - sun.misc.Unsafe.copyMemory: available
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,967 DEBUG [main][PlatformDependent0.java:182] - java.nio.Buffer.address: available
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,968 DEBUG [main][PlatformDependent0.java:243] - direct buffer constructor: available
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,969 DEBUG [main][PlatformDependent0.java:313] - java.nio.Bits.unaligned: available, true
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,970 DEBUG [main][PlatformDependent0.java:378] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,970 DEBUG [main][PlatformDependent0.java:385] - java.nio.DirectByteBuffer.<init>(long, int): available
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,970 DEBUG [main][PlatformDependent.java:992] - sun.misc.Unsafe: available
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,971 DEBUG [main][PlatformDependent.java:1086] - -Dio.netty.tmpdir: C:\Users\Lenovo\AppData\Local\Temp (java.io.tmpdir)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,972 DEBUG [main][PlatformDependent.java:1165] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,976 DEBUG [main][PlatformDependent.java:157] - -Dio.netty.maxDirectMemory: 3786407936 bytes
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,977 DEBUG [main][PlatformDependent.java:164] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,979 DEBUG [main][CleanerJava6.java:92] - java.nio.ByteBuffer.cleaner(): available
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,979 DEBUG [main][PlatformDependent.java:184] - -Dio.netty.noPreferDirect: false
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,980 DEBUG [main][ResourceLeakDetectorFactory.java:202] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5d66ae3a
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:29,984 DEBUG [main][PlatformDependent.java:860] - org.jctools-core.MpscChunkedArrayQueue: available
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:30,011 DEBUG [main][Loggers.java:249] - Using Slf4j logging framework
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:30,045 DEBUG [main][Loggers.java:249] - Starting UnsafeSupport init in Java 1.8
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:30,045 DEBUG [main][Loggers.java:249] - Unsafe is available
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:30,179 DEBUG [main][PooledByteBufAllocator.java:126] - -Dio.netty.allocator.numHeapArenas: 16
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:30,179 DEBUG [main][PooledByteBufAllocator.java:127] - -Dio.netty.allocator.numDirectArenas: 16
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:30,179 DEBUG [main][PooledByteBufAllocator.java:129] - -Dio.netty.allocator.pageSize: 8192
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:30,180 DEBUG [main][PooledByteBufAllocator.java:134] - -Dio.netty.allocator.maxOrder: 11
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:30,180 DEBUG [main][PooledByteBufAllocator.java:138] - -Dio.netty.allocator.chunkSize: 16777216
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:30,180 DEBUG [main][PooledByteBufAllocator.java:139] - -Dio.netty.allocator.tinyCacheSize: 512
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:30,180 DEBUG [main][PooledByteBufAllocator.java:140] - -Dio.netty.allocator.smallCacheSize: 256
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:30,180 DEBUG [main][PooledByteBufAllocator.java:141] - -Dio.netty.allocator.normalCacheSize: 64
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:30,180 DEBUG [main][PooledByteBufAllocator.java:142] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:30,181 DEBUG [main][PooledByteBufAllocator.java:143] - -Dio.netty.allocator.cacheTrimInterval: 8192
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:30,181 DEBUG [main][PooledByteBufAllocator.java:144] - -Dio.netty.allocator.useCacheForAllThreads: true
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:30,181 DEBUG [main][PooledByteBufAllocator.java:145] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:30,188 DEBUG [main][InternalThreadLocalMap.java:54] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:30,188 DEBUG [main][InternalThreadLocalMap.java:57] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:31,445 WARN [main][JwtAccessTokenConverter.java:302] - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:31,704 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:31,844 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:31,866 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:31,942 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:31,974 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:31,986 INFO [main][AnnotatedInterfaceConfigBeanBuilder.java:84] - The configBean[type:ReferenceBean] has been built.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,015 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,092 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,093 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,116 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,129 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,130 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,132 DEBUG [main][SpringExtensionFactory.java:99] -  [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.1.6
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.shanjupay.uaa.UAABootstrap.main(UAABootstrap.java:14)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,141 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,176 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,192 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192015, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,192 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192015] should not be registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,204 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192015, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,213 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.1.6/com.shanjupay.user.api.TenantService] is being subscribed for service[name : gateway-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,213 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,214 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : gateway-service] is about to be initialized
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,270 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : gateway-service] does not expose The REST metadata in the Dubbo services.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,271 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,271 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.1.6/com.shanjupay.user.api.TenantService] is being subscribed for service[name : user-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,271 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] can't be found when the subscribed service[name : user-service], and then try to initialize it
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,272 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : user-service] is about to be initialized
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,347 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,351 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,352 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,353 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.1.6/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,353 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.1.6/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0] should not be registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,354 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.1.6/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,397 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,422 DEBUG [main][MultithreadEventLoopGroup.java:44] - -Dio.netty.eventLoopThreads: 16
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,432 DEBUG [main][NioEventLoop.java:105] - -Dio.netty.noKeySetOptimization: false
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,433 DEBUG [main][NioEventLoop.java:106] - -Dio.netty.selectorAutoRebuildThreshold: 512
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,493 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,518 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,597 DEBUG [main][DefaultChannelId.java:79] - -Dio.netty.processId: 24528 (auto-detected)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,601 DEBUG [main][NetUtil.java:139] - -Djava.net.preferIPv4Stack: false
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:32,602 DEBUG [main][NetUtil.java:140] - -Djava.net.preferIPv6Addresses: false
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:33,576 DEBUG [main][NetUtil.java:224] - Loopback interface: [lo, Software Loopback Interface 1, 127.0.0.1] ([lo, Software Loopback Interface 1, 127.0.0.1], {})
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:33,578 DEBUG [main][NetUtil.java:289] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:34,669 DEBUG [main][DefaultChannelId.java:101] - -Dio.netty.machineId: 44:85:00:ff:fe:ac:ff:71 (auto-detected)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:34,708 DEBUG [main][ByteBufUtil.java:83] - -Dio.netty.allocator.type: pooled
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:34,708 DEBUG [main][ByteBufUtil.java:92] - -Dio.netty.threadLocalDirectBufferSize: 0
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:34,708 DEBUG [main][ByteBufUtil.java:95] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,078 INFO [main][AbstractClient.java:199] -  [DUBBO] Succeed connect to server /192.168.1.6:20880 from NettyClient 192.168.1.6 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0x91a5b2b7, L:/192.168.1.6:60922 - R:/192.168.1.6:20880]], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,079 INFO [main][AbstractClient.java:71] -  [DUBBO] Start NettyClient LAPTOP-Q3EN03O1/192.168.1.6 connect to the server /192.168.1.6:20880, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,141 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,170 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,190 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,223 INFO [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\Lenovo\.dubbo\dubbo-registry-uaa-service-127.0.0.1:8848.cache, data: {com.shanjupay.user.api.AuthorizationService=dubbo://192.168.1.6:20880/com.shanjupay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.shanjupay.user.api.AuthorizationService&pid=21188&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1625395014207, transaction-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.1.6:20893/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=transaction-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=transaction-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=16660&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625392252835&version=1.0.0, payment-agent-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.1.6:20896/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=payment-agent-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=payment-agent-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=26280&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625392468805&version=1.0.0, user-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.1.6:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=21188&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625395022973&version=1.0.0, merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.1.6:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=8092&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625392319400&version=1.0.0, merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.1.6:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=21020&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625392740294&version=1.0.0, com.shanjupay.user.api.TenantService=dubbo://192.168.1.6:20880/com.shanjupay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&path=com.shanjupay.user.api.TenantService&pid=21188&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1625395021390}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,226 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.1.6/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,234 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.1.6/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,245 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.1.6/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0, urls: [dubbo://192.168.1.6:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=21628&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625396158885&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,249 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.1.6/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0, urls: [dubbo://192.168.1.6:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=21628&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625396158885&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,253 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=24528&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Duser-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D24528%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.1.6%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1625396192348%26version%3D1.0.0&register.ip=192.168.1.6&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,304 DEBUG [main][Recycler.java:96] - -Dio.netty.recycler.maxCapacityPerThread: 4096
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,304 DEBUG [main][Recycler.java:97] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,304 DEBUG [main][Recycler.java:98] - -Dio.netty.recycler.linkCapacity: 16
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,305 DEBUG [main][Recycler.java:99] - -Dio.netty.recycler.ratio: 8
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,331 DEBUG [NettyClientWorker-4-1][AbstractByteBuf.java:61] - -Dio.netty.buffer.checkAccessible: true
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,331 DEBUG [NettyClientWorker-4-1][AbstractByteBuf.java:62] - -Dio.netty.buffer.checkBounds: true
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,332 DEBUG [NettyClientWorker-4-1][ResourceLeakDetectorFactory.java:202] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4ecb3db4
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,503 DEBUG [DubboClientHandler-192.168.1.6:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,505 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : user-service] does not expose The REST metadata in the Dubbo services.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,510 DEBUG [DubboClientHandler-192.168.1.6:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,511 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192015] will notify all URLs : [dubbo://192.168.1.6:20880?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=21628&register=true&release=2.7.3&side=provider&timestamp=1625396157346]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,513 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192015, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,519 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192015, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,527 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192015, urls: [dubbo://192.168.1.6:20880/com.shanjupay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&path=com.shanjupay.user.api.TenantService&pid=21628&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1625396157346], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,528 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192015, urls: [dubbo://192.168.1.6:20880/com.shanjupay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&path=com.shanjupay.user.api.TenantService&pid=21628&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1625396157346], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,528 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service com.shanjupay.user.api.TenantService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24528&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.shanjupay.user.api.TenantService%26lazy%3Dfalse%26methods%3DmodifyBundle%2CgetTenantByAccount%2CgetAccountByUsername%2CcreateBundle%2CinitBundle%2Clogin%2CisExistAccountByUsername%2CgetBundle%2CunbindTenant%2CremoveTenant%2CqueryTenants%2CqueryBundleByTenantType%2CgetAccountByMobile%2CgetApplicationDTOByClientId%2CqueryAccount%2CchangeBundle%2CisExistAccountInTenantByUsername%2CcreateAccountInTenant%2Cauthentication%2CqueryAccountRole%2CqueryAccountInTenant%2CisExistAccountByMobile%2CsendMessage%2CcreateTenantRelateAccount%2CqueryAllBundle%2CcreateAccount%2CgetTenant%2CqueryAdministratorByPage%2CisExistAccountInTenantByMobile%2CaccountPassword%2CcreateTenantAndAccount%2CbindTenant%26pid%3D24528%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.1.6%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1625396192015&register.ip=192.168.1.6&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192015, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,579 INFO [main][AnnotatedInterfaceConfigBeanBuilder.java:84] - The configBean[type:ReferenceBean] has been built.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,585 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,603 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,603 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,611 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396195585, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,612 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396195585] should not be registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,612 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396195585, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,612 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService] is being subscribed for service[name : gateway-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,613 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,613 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,613 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,614 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService] is being subscribed for service[name : user-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,617 DEBUG [DubboClientHandler-192.168.1.6:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,617 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396195585] will notify all URLs : [dubbo://192.168.1.6:20880?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=21628&register=true&release=2.7.3&side=provider&timestamp=1625396150384]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,618 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396195585, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,622 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396195585, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,629 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396195585, urls: [dubbo://192.168.1.6:20880/com.shanjupay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.shanjupay.user.api.AuthorizationService&pid=21628&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1625396150384], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,630 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396195585, urls: [dubbo://192.168.1.6:20880/com.shanjupay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.shanjupay.user.api.AuthorizationService&pid=21628&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1625396150384], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:35,630 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service com.shanjupay.user.api.AuthorizationService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24528&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.shanjupay.user.api.AuthorizationService%26lazy%3Dfalse%26methods%3DremoveRole%2CroleBindPrivilege%2CmodifyRole%2CcreateRole%2CunbindAccountRole%2CqueryPrivilege%2CqueryRole%2CqueryPrivilegeTree%2CqueryRoleByPage%2CbindAccountRole%2CqueryPrivilegeByGroupId%2CqueryTenantRole%2Cauthorize%26pid%3D24528%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.1.6%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1625396195585&register.ip=192.168.1.6&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396195585, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:36,245 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:36,245 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:36,256 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:36,256 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:36,327 DEBUG [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:36,328 DEBUG [main][ResourceBundleMessageInterpolator.java:89] - Loaded expression factory via original TCCL
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:36,345 DEBUG [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:36,346 DEBUG [main][ConfigurationImpl.java:148] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:36,347 DEBUG [main][ConfigurationImpl.java:180] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:36,348 DEBUG [main][ConfigurationImpl.java:194] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:36,349 DEBUG [main][ValidationXmlParser.java:120] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:36,349 DEBUG [main][ResourceLoaderHelper.java:53] - Trying to load META-INF/validation.xml via user class loader
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:36,349 DEBUG [main][ResourceLoaderHelper.java:60] - Trying to load META-INF/validation.xml via TCCL
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:36,350 DEBUG [main][ResourceLoaderHelper.java:66] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:36,350 DEBUG [main][ValidationXmlParser.java:127] - No META-INF/validation.xml found. Using annotation based configuration only.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:36,358 DEBUG [main][ValidatorFactoryImpl.java:578] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:36,358 DEBUG [main][ValidatorFactoryImpl.java:579] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:36,358 DEBUG [main][ValidatorFactoryImpl.java:580] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:36,358 DEBUG [main][ValidatorFactoryImpl.java:581] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:36,359 DEBUG [main][ValidatorFactoryImpl.java:582] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:36,633 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:37,249 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:37,301 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:38,305 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/public/**'], []
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:38,305 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:38,305 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/v2/**'], []
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:38,305 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/swagger**'], []
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:38,306 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/static/**'], []
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:38,306 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/resources/**'], []
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:38,590 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@102ecb61, org.springframework.security.web.context.SecurityContextPersistenceFilter@7816454d, org.springframework.security.web.header.HeaderWriterFilter@667dd150, org.springframework.security.web.authentication.logout.LogoutFilter@5030997b, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@1253b822, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5bb39285, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@54e18a46, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2b6ee447, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1fd0ae78, org.springframework.security.web.session.SessionManagementFilter@758d4aa9, org.springframework.security.web.access.ExceptionTranslationFilter@771afdd5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7b5c9412]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:38,621 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@18be3205, org.springframework.security.web.context.SecurityContextPersistenceFilter@1700d089, org.springframework.security.web.header.HeaderWriterFilter@6ca367aa, org.springframework.security.web.authentication.logout.LogoutFilter@2a21cbe7, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@65930e02, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@77e6053, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7097d921, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6fd97fd1, org.springframework.security.web.session.SessionManagementFilter@30ed4034, org.springframework.security.web.access.ExceptionTranslationFilter@7b8d6c66, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@72a0a60d]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,241 INFO [main][EndpointLinksResolver.java:59] - Exposing 4 endpoint(s) beneath base path '/actuator'
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,754 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,754 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : user-service] has been initialized
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,754 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,865 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,874 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : gateway-service , size : 1] change is about to be dispatched
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,875 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.1.6/com.shanjupay.user.api.TenantService] is being subscribed for service[name : gateway-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,875 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,875 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,875 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,876 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService] is being subscribed for service[name : gateway-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,876 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,876 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,876 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,876 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : user-service , size : 1] change is about to be dispatched
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,877 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.1.6/com.shanjupay.user.api.TenantService] is being subscribed for service[name : user-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,878 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.shanjupay.uua.api.OauthClientDetailsService, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,880 DEBUG [DubboClientHandler-192.168.1.6:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,881 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192015] will notify all URLs : [dubbo://192.168.1.6:20880?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=21628&register=true&release=2.7.3&side=provider&timestamp=1625396157346]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,881 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService] is being subscribed for service[name : user-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,884 DEBUG [DubboClientHandler-192.168.1.6:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,885 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396195585] will notify all URLs : [dubbo://192.168.1.6:20880?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=21628&register=true&release=2.7.3&side=provider&timestamp=1625396150384]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,888 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,926 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.shanjupay.uua.api.OauthClientDetailsService to local registry url : injvm://127.0.0.1/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396199891, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,927 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.shanjupay.uua.api.OauthClientDetailsService to url dubbo://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396199891, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,928 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,928 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.uua.api.OauthClientDetailsService url dubbo://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396199891 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&pid=24528&qos.enable=false&qos.port=22220&registry=spring-cloud&release=2.7.3&timestamp=1625396199889, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:39,992 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.6:20881, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:40,003 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24528&register=true&release=2.7.3&side=provider&timestamp=1625396199891, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,508 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396199891, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,508 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService] is being subscribed for service[name : gateway-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,508 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.uua.api.OauthClientDetailsService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,509 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,509 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.uua.api.OauthClientDetailsService] still can't be found, it could effect the further Dubbo service invocation
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,509 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService] is being subscribed for service[name : user-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,515 DEBUG [DubboClientHandler-192.168.1.6:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,516 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396199891] will notify all URLs : []
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,516 DEBUG [main][RegistryProtocol.java:524] -  [DUBBO] original override urls: [], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,516 DEBUG [main][RegistryProtocol.java:528] -  [DUBBO] subscribe url: provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396199891, override urls: [], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,517 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,517 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.uua.api.OauthClientDetailsService url dubbo://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396199891 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&pid=24528&qos.enable=false&qos.port=22220&registry=nacos&release=2.7.3&timestamp=1625396199889, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,518 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24528&register=true&release=2.7.3&side=provider&timestamp=1625396199891, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,522 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396199891, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,528 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396199891, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,529 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396199891, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,538 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-56020"]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,574 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 56020 (http) with context path '/uaa'
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,594 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,604 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.1.6&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625396201594&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,604 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.1.6:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.1.6&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625396201594&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,604 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,604 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.1.6:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.1.6&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625396201594&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&pid=24528&qos.enable=false&qos.port=22220&registry=nacos&release=2.7.3&timestamp=1625396201594, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,606 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.1.6:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24528&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625396201594&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,610 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.1.6:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625396201594&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,617 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.1.6:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625396201594&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,617 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.1.6:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625396201594&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,618 INFO [main][DubboMetadataServiceExporter.java:86] - The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@18ff753c" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" exported="true" unexported="false" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" version="1.0.0" dynamic="true" group="uaa-service" register="true" deprecated="false" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been exported.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,643 INFO [main][NacosServiceRegistry.java:62] - nacos registry, uaa-service 192.168.1.6:56020 register finished
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:41,648 INFO [main][StartupInfoLogger.java:59] - Started UAABootstrap in 25.506 seconds (JVM running for 28.966)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,430 DEBUG [RMI TCP Connection(3)-192.168.1.6][Log4j2Filter.java:132] - {conn-10005} pool-connect
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,438 DEBUG [RMI TCP Connection(3)-192.168.1.6][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,452 DEBUG [RMI TCP Connection(3)-192.168.1.6][Log4j2Filter.java:132] - {conn-10005} pool-connect
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,459 DEBUG [RMI TCP Connection(3)-192.168.1.6][Log4j2Filter.java:137] - {conn-10005, stmt-20000} created
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,609 DEBUG [RMI TCP Connection(3)-192.168.1.6][Log4j2Filter.java:137] - {conn-10005, stmt-20000, rs-50000} query executed. 142.1568 millis. /* ping */ SELECT 1
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,609 DEBUG [RMI TCP Connection(3)-192.168.1.6][Log4j2Filter.java:142] - {conn-10005, stmt-20000, rs-50000} open
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,612 DEBUG [RMI TCP Connection(3)-192.168.1.6][Log4j2Filter.java:142] - {conn-10005, stmt-20000, rs-50000} Header: [1]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,616 DEBUG [RMI TCP Connection(3)-192.168.1.6][Log4j2Filter.java:142] - {conn-10005, stmt-20000, rs-50000} Result: [1]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,618 DEBUG [RMI TCP Connection(3)-192.168.1.6][Log4j2Filter.java:142] - {conn-10005, stmt-20000, rs-50000} closed
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,618 DEBUG [RMI TCP Connection(3)-192.168.1.6][Log4j2Filter.java:137] - {conn-10005, stmt-20000} closed
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,618 DEBUG [RMI TCP Connection(3)-192.168.1.6][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,629 DEBUG [RMI TCP Connection(3)-192.168.1.6][RedisClient.java:261] - Trying to get a Redis connection for: RedisURI [host='localhost', port=6379]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,792 INFO [RMI TCP Connection(3)-192.168.1.6][EpollProvider.java:68] - Starting without optional epoll library
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,798 INFO [RMI TCP Connection(3)-192.168.1.6][KqueueProvider.java:70] - Starting without optional kqueue library
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,800 DEBUG [RMI TCP Connection(3)-192.168.1.6][DefaultEventLoopGroupProvider.java:64] - Allocating executor io.netty.channel.nio.NioEventLoopGroup
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,800 DEBUG [RMI TCP Connection(3)-192.168.1.6][DefaultEventLoopGroupProvider.java:138] - Creating executor io.netty.channel.nio.NioEventLoopGroup
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,826 DEBUG [RMI TCP Connection(3)-192.168.1.6][DefaultEventLoopGroupProvider.java:77] - Adding reference to io.netty.channel.nio.NioEventLoopGroup@768630f9, existing ref count 0
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,840 DEBUG [RMI TCP Connection(3)-192.168.1.6][RedisClient.java:734] - Resolved SocketAddress localhost:6379 using RedisURI [host='localhost', port=6379]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,842 DEBUG [RMI TCP Connection(3)-192.168.1.6][AbstractRedisClient.java:304] - Connecting to Redis at localhost:6379
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,883 DEBUG [lettuce-nioEventLoop-7-1][CommandHandler.java:154] - [channel=0x493ac600, [id: 0xbd9fe2e5] (inactive), chid=0x1] channelRegistered()
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,887 DEBUG [lettuce-nioEventLoop-7-1][CommandHandler.java:263] - [channel=0x493ac600, /127.0.0.1:61034 -> localhost/127.0.0.1:6379, chid=0x1] channelActive()
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,887 DEBUG [lettuce-nioEventLoop-7-1][DefaultEndpoint.java:371] - [channel=0x493ac600, /127.0.0.1:61034 -> localhost/127.0.0.1:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,887 DEBUG [lettuce-nioEventLoop-7-1][DefaultEndpoint.java:376] - [channel=0x493ac600, /127.0.0.1:61034 -> localhost/127.0.0.1:6379, epid=0x1] activating endpoint
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,888 DEBUG [lettuce-nioEventLoop-7-1][DefaultEndpoint.java:453] - [channel=0x493ac600, /127.0.0.1:61034 -> localhost/127.0.0.1:6379, epid=0x1] flushCommands()
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,888 DEBUG [lettuce-nioEventLoop-7-1][DefaultEndpoint.java:468] - [channel=0x493ac600, /127.0.0.1:61034 -> localhost/127.0.0.1:6379, epid=0x1] flushCommands() Flushing 0 commands
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,888 DEBUG [lettuce-nioEventLoop-7-1][ConnectionWatchdog.java:159] - [channel=0x493ac600, /127.0.0.1:61034 -> localhost/127.0.0.1:6379, last known addr=localhost/127.0.0.1:6379] channelActive()
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,888 DEBUG [lettuce-nioEventLoop-7-1][ConnectionWatchdog.java:159] - [channel=0x493ac600, /127.0.0.1:61034 -> localhost/127.0.0.1:6379, last known addr=localhost/127.0.0.1:6379] channelActive()
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,889 DEBUG [lettuce-nioEventLoop-7-1][CommandHandler.java:277] - [channel=0x493ac600, /127.0.0.1:61034 -> localhost/127.0.0.1:6379, chid=0x1] channelActive() done
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,890 DEBUG [lettuce-nioEventLoop-7-1][AbstractRedisClient.java:337] - Connecting to Redis at localhost:6379: Success
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,895 DEBUG [lettuce-nioEventLoop-7-1][ConnectionWatchdog.java:127] - [channel=0x493ac600, /127.0.0.1:61034 -> localhost/127.0.0.1:6379, last known addr=localhost/127.0.0.1:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@6b21b66d)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,895 DEBUG [lettuce-nioEventLoop-7-1][ConnectionWatchdog.java:127] - [channel=0x493ac600, /127.0.0.1:61034 -> localhost/127.0.0.1:6379, last known addr=localhost/127.0.0.1:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@6b21b66d)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,959 DEBUG [RMI TCP Connection(3)-192.168.1.6][RedisChannelHandler.java:171] - dispatching command SubscriptionCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,962 DEBUG [RMI TCP Connection(3)-192.168.1.6][DefaultEndpoint.java:339] - [channel=0x493ac600, /127.0.0.1:61034 -> localhost/127.0.0.1:6379, epid=0x1] write() writeAndFlush command SubscriptionCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,962 DEBUG [lettuce-nioEventLoop-7-1][CommandHandler.java:341] - [channel=0x493ac600, /127.0.0.1:61034 -> localhost/127.0.0.1:6379, chid=0x1] write(ctx, SubscriptionCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,966 DEBUG [RMI TCP Connection(3)-192.168.1.6][DefaultEndpoint.java:153] - [channel=0x493ac600, /127.0.0.1:61034 -> localhost/127.0.0.1:6379, epid=0x1] write() done
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,968 DEBUG [lettuce-nioEventLoop-7-1][CommandEncoder.java:99] - [channel=0x493ac600, /127.0.0.1:61034 -> localhost/127.0.0.1:6379] writing command SubscriptionCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,968 DEBUG [lettuce-nioEventLoop-7-1][CommandHandler.java:536] - [[channel=0x493ac600, /127.0.0.1:61034 -> localhost/127.0.0.1:6379, chid=0x1], 34, 1] Received: [[channel=0x493ac600, /127.0.0.1:61034 -> localhost/127.0.0.1:6379, chid=0x1], 34, 1] bytes, {} commands in the stack
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,969 DEBUG [lettuce-nioEventLoop-7-1][CommandHandler.java:581] - [channel=0x493ac600, /127.0.0.1:61034 -> localhost/127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,969 DEBUG [lettuce-nioEventLoop-7-1][RedisStateMachine.java:93] - Decode LatencyMeteredCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:43,974 DEBUG [lettuce-nioEventLoop-7-1][RedisStateMachine.java:190] - Decoded LatencyMeteredCommand [type=INFO, output=StatusOutput [output=null, error='NOAUTH Authentication required.'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand], empty stack: true
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:44,450 INFO [RMI TCP Connection(4)-192.168.1.6][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:44,450 INFO [RMI TCP Connection(4)-192.168.1.6][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:56:44,482 INFO [RMI TCP Connection(4)-192.168.1.6][FrameworkServlet.java:546] - Completed initialization in 31 ms
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:09,882 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:39,888 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:41,519 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x91a5b2b7, L:/192.168.1.6:60922 - R:/192.168.1.6:20880]], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:41,521 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,305 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,380 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} created. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,387 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Parameters : [merchant-platform]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,388 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Types : [VARCHAR]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,392 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20001, rs-50001} query executed. 4.1689 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,392 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50001} open
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,392 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50001} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,393 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50001} Result: [merchant-platform, 123456, shanju-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,395 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50001} closed
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,395 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} clearParameters. 
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,396 DEBUG [http-nio-56020-exec-1][PreparedStatementPool.java:129] - {conn-10005, pstmt-20001} enter cache
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,396 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,454 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,455 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Parameters : [merchant-platform]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,455 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Types : [VARCHAR]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,457 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20001, rs-50002} query executed. 1.5777 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,457 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50002} open
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,457 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50002} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,458 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50002} Result: [merchant-platform, 123456, shanju-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,459 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50002} closed
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,459 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} clearParameters. 
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,459 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,466 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,466 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Parameters : [merchant-platform]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,467 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Types : [VARCHAR]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,468 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20001, rs-50003} query executed. 1.6611 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,469 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50003} open
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,469 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50003} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,470 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50003} Result: [merchant-platform, 123456, shanju-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,471 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50003} closed
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,472 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} clearParameters. 
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,472 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,489 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,490 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Parameters : [merchant-platform]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,490 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Types : [VARCHAR]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,491 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20001, rs-50004} query executed. 1.5871 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,491 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50004} open
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,492 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50004} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,492 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50004} Result: [merchant-platform, 123456, shanju-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,493 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50004} closed
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,493 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} clearParameters. 
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,493 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,766 DEBUG [DubboClientHandler-192.168.1.6:20880-thread-2][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:57:52,773 ERROR [http-nio-56020-exec-1][TokenEndpoint.java:169] - Handling error: NestedServletException, Handler dispatch failed; nested exception is java.lang.ExceptionInInitializerError
org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.ExceptionInInitializerError
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1053)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter.successfulAuthentication(ClientCredentialsTokenEndpointFilter.java:131)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:240)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:679)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ExceptionInInitializerError
	at com.shanjupay.user.service.TenantServiceImpl.getAccountByUsername(TenantServiceImpl.java:521)
	at com.shanjupay.user.service.TenantServiceImpl.authentication(TenantServiceImpl.java:654)
	at com.shanjupay.user.service.TenantServiceImpl.login(TenantServiceImpl.java:710)
	at com.shanjupay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$5c82a28f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.shanjupay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$fdda1357.login(<generated>)
	at com.shanjupay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$5c82a28f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.shanjupay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$c9d1df.login(<generated>)
	at org.apache.dubbo.common.bytecode.Wrapper3.invokeMethod(Wrapper3.java)
	at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
	at org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)
	at org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)
	at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:96)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:148)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)
	at org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)
	at org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	... 1 more
Caused by: java.lang.RuntimeException: java.lang.ClassNotFoundException: Cannot find implementation for com.shanjupay.user.convert.AccountConvert
	at org.mapstruct.factory.Mappers.getMapper(Mappers.java:79)
	at com.shanjupay.user.convert.AccountConvert.<clinit>(AccountConvert.java:12)
	... 49 more
Caused by: java.lang.ClassNotFoundException: Cannot find implementation for com.shanjupay.user.convert.AccountConvert
	at org.mapstruct.factory.Mappers.getMapper(Mappers.java:93)
	at org.mapstruct.factory.Mappers.getMapper(Mappers.java:76)
	... 50 more
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:58:09,893 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:58:39,897 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:58:40,820 DEBUG [DubboClientHandler-192.168.1.6:20880-thread-2][DubboProtocol.java:174] -  [DUBBO] disconnected from /192.168.1.6:20880,url:dubbo://192.168.1.6:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.1.6&bind.port=20880&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=user-service&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24528&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.1.6&release=2.7.3&remote.application=user-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1625396158885&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:09,902 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:10,299 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192015, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:10,950 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396195585, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:12,209 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.1.6/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:12,581 DEBUG [DubboServerHandler-192.168.1.6:20881-thread-2][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:13,369 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : user-service , size : 0] change is about to be dispatched
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:13,370 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.1.6/com.shanjupay.user.api.TenantService] is being subscribed for service[name : user-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:13,370 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:249] - There is no instance from service[name : user-service], and then Dubbo Service[key : com.shanjupay.user.api.TenantService] will not be available , please make sure the further impact
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:13,370 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192015] will notify all URLs : [empty://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192015]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:13,370 WARN [com.alibaba.nacos.naming.client.listener][RegistryDirectory.java:659] -  [DUBBO] Unsupported category providers,configurators,routers in notified url: empty://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192015 from registry localhost:9090 to consumer 192.168.1.6, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:13,374 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService] is being subscribed for service[name : user-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:13,374 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:249] - There is no instance from service[name : user-service], and then Dubbo Service[key : com.shanjupay.user.api.AuthorizationService] will not be available , please make sure the further impact
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:13,374 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396195585] will notify all URLs : [empty://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396195585]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:13,375 WARN [com.alibaba.nacos.naming.client.listener][RegistryDirectory.java:659] -  [DUBBO] Unsupported category providers,configurators,routers in notified url: empty://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396195585 from registry localhost:9090 to consumer 192.168.1.6, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:13,375 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService] is being subscribed for service[name : user-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:13,375 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:249] - There is no instance from service[name : user-service], and then Dubbo Service[key : com.shanjupay.uua.api.OauthClientDetailsService] will not be available , please make sure the further impact
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:13,375 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396199891] will notify all URLs : [empty://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396199891]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:13,376 DEBUG [com.alibaba.nacos.naming.client.listener][RegistryProtocol.java:524] -  [DUBBO] original override urls: [empty://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396199891], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:13,376 DEBUG [com.alibaba.nacos.naming.client.listener][RegistryProtocol.java:528] -  [DUBBO] subscribe url: provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396199891, override urls: [empty://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396199891], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:13,377 DEBUG [com.alibaba.nacos.naming.client.listener][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements org.apache.dubbo.rpc.cluster.ConfiguratorFactory {
public org.apache.dubbo.rpc.cluster.Configurator getConfigurator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.ConfiguratorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.ConfiguratorFactory extension = (org.apache.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:15,192 DEBUG [DubboServerHandler-192.168.1.6:20881-thread-3][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:16,210 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396195585, urls: [dubbo://192.168.1.6:20880/com.shanjupay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.shanjupay.user.api.AuthorizationService&pid=19040&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1625396353289], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:16,212 DEBUG [com.alibaba.nacos.naming.client.listener][RegistryDirectory.java:550] -  [DUBBO] destroy invoker[dubbo://192.168.1.6:20880/com.shanjupay.user.api.AuthorizationService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.shanjupay.user.api.AuthorizationService&pid=24528&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.1.6&release=2.7.3&remote.application=user-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396150384] success. , dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:17,222 DEBUG [DubboServerHandler-192.168.1.6:20881-thread-4][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:19,046 DEBUG [DubboServerHandler-192.168.1.6:20881-thread-5][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:20,644 DEBUG [DubboServerHandler-192.168.1.6:20881-thread-6][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:21,655 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192015, urls: [dubbo://192.168.1.6:20880/com.shanjupay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&path=com.shanjupay.user.api.TenantService&pid=19040&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1625396359067], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:21,657 DEBUG [com.alibaba.nacos.naming.client.listener][RegistryDirectory.java:550] -  [DUBBO] destroy invoker[dubbo://192.168.1.6:20880/com.shanjupay.user.api.TenantService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&path=com.shanjupay.user.api.TenantService&pid=24528&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.1.6&release=2.7.3&remote.application=user-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396157346] success. , dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:21,742 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.1.6/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0, urls: [dubbo://192.168.1.6:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=19040&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625396360722&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:21,743 DEBUG [com.alibaba.nacos.naming.client.listener][RegistryDirectory.java:550] -  [DUBBO] destroy invoker[dubbo://192.168.1.6:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=24528&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.1.6&release=2.7.3&remote.application=user-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1625396158885&version=1.0.0] success. , dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:21,772 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : user-service , size : 1] change is about to be dispatched
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:21,772 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.1.6/com.shanjupay.user.api.TenantService] is being subscribed for service[name : user-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:21,773 ERROR [com.alibaba.nacos.naming.client.listener][DubboMetadataServiceInvocationHandler.java:54] - No provider available in [invoker :interface org.apache.dubbo.rpc.service.GenericService -> spring-cloud://localhost:9090/org.apache.dubbo.registry.RegistryService?anyhost=true&application=uaa-service&bind.ip=192.168.1.6&bind.port=20880&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24528&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.1.6&release=2.7.3&remote.application=user-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0,directory: org.apache.dubbo.registry.integration.RegistryDirectory@ca2cd5e, invoker :interface org.apache.dubbo.rpc.service.GenericService -> nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?anyhost=true&application=uaa-service&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=24528&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.1.6&release=2.7.3&remote.application=user-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0,directory: org.apache.dubbo.registry.integration.RegistryDirectory@5c997de8]
org.apache.dubbo.rpc.RpcException: No provider available in [invoker :interface org.apache.dubbo.rpc.service.GenericService -> spring-cloud://localhost:9090/org.apache.dubbo.registry.RegistryService?anyhost=true&application=uaa-service&bind.ip=192.168.1.6&bind.port=20880&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24528&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.1.6&release=2.7.3&remote.application=user-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0,directory: org.apache.dubbo.registry.integration.RegistryDirectory@ca2cd5e, invoker :interface org.apache.dubbo.rpc.service.GenericService -> nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?anyhost=true&application=uaa-service&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=24528&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.1.6&release=2.7.3&remote.application=user-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0,directory: org.apache.dubbo.registry.integration.RegistryDirectory@5c997de8]
	at org.apache.dubbo.rpc.cluster.support.RegistryAwareClusterInvoker.doInvoke(RegistryAwareClusterInvoker.java:59)
	at org.apache.dubbo.rpc.cluster.support.AbstractClusterInvoker.invoke(AbstractClusterInvoker.java:248)
	at org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvoker.invoke(MockClusterInvoker.java:78)
	at org.apache.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:55)
	at org.apache.dubbo.common.bytecode.proxy0.$invoke(proxy0.java)
	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceInvocationHandler.invoke(DubboMetadataServiceInvocationHandler.java:49)
	at com.sun.proxy.$Proxy137.getExportedURLs(Unknown Source)
	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry.getExportedURLs(AbstractSpringCloudRegistry.java:328)
	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry.subscribeDubboServiceURL(AbstractSpringCloudRegistry.java:260)
	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry$1.onApplicationEvent(AbstractSpringCloudRegistry.java:193)
	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry$1.onApplicationEvent(AbstractSpringCloudRegistry.java:186)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceDiscoveryAutoConfiguration.dispatchServiceInstancesChangedEvent(DubboServiceDiscoveryAutoConfiguration.java:161)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceDiscoveryAutoConfiguration.access$200(DubboServiceDiscoveryAutoConfiguration.java:107)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceDiscoveryAutoConfiguration$NacosConfiguration.lambda$subscribeEventListener$1(DubboServiceDiscoveryAutoConfiguration.java:541)
	at com.alibaba.nacos.client.naming.core.EventDispatcher$Notifier.run(EventDispatcher.java:128)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:21,776 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396192015] will notify all URLs : []
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:21,776 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService] is being subscribed for service[name : user-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:21,776 ERROR [com.alibaba.nacos.naming.client.listener][DubboMetadataServiceInvocationHandler.java:54] - No provider available in [invoker :interface org.apache.dubbo.rpc.service.GenericService -> spring-cloud://localhost:9090/org.apache.dubbo.registry.RegistryService?anyhost=true&application=uaa-service&bind.ip=192.168.1.6&bind.port=20880&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24528&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.1.6&release=2.7.3&remote.application=user-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0,directory: org.apache.dubbo.registry.integration.RegistryDirectory@ca2cd5e, invoker :interface org.apache.dubbo.rpc.service.GenericService -> nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?anyhost=true&application=uaa-service&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=24528&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.1.6&release=2.7.3&remote.application=user-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0,directory: org.apache.dubbo.registry.integration.RegistryDirectory@5c997de8]
org.apache.dubbo.rpc.RpcException: No provider available in [invoker :interface org.apache.dubbo.rpc.service.GenericService -> spring-cloud://localhost:9090/org.apache.dubbo.registry.RegistryService?anyhost=true&application=uaa-service&bind.ip=192.168.1.6&bind.port=20880&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24528&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.1.6&release=2.7.3&remote.application=user-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0,directory: org.apache.dubbo.registry.integration.RegistryDirectory@ca2cd5e, invoker :interface org.apache.dubbo.rpc.service.GenericService -> nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?anyhost=true&application=uaa-service&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=24528&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.1.6&release=2.7.3&remote.application=user-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0,directory: org.apache.dubbo.registry.integration.RegistryDirectory@5c997de8]
	at org.apache.dubbo.rpc.cluster.support.RegistryAwareClusterInvoker.doInvoke(RegistryAwareClusterInvoker.java:59)
	at org.apache.dubbo.rpc.cluster.support.AbstractClusterInvoker.invoke(AbstractClusterInvoker.java:248)
	at org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvoker.invoke(MockClusterInvoker.java:78)
	at org.apache.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:55)
	at org.apache.dubbo.common.bytecode.proxy0.$invoke(proxy0.java)
	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceInvocationHandler.invoke(DubboMetadataServiceInvocationHandler.java:49)
	at com.sun.proxy.$Proxy137.getExportedURLs(Unknown Source)
	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry.getExportedURLs(AbstractSpringCloudRegistry.java:328)
	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry.subscribeDubboServiceURL(AbstractSpringCloudRegistry.java:260)
	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry$1.onApplicationEvent(AbstractSpringCloudRegistry.java:193)
	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry$1.onApplicationEvent(AbstractSpringCloudRegistry.java:186)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceDiscoveryAutoConfiguration.dispatchServiceInstancesChangedEvent(DubboServiceDiscoveryAutoConfiguration.java:161)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceDiscoveryAutoConfiguration.access$200(DubboServiceDiscoveryAutoConfiguration.java:107)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceDiscoveryAutoConfiguration$NacosConfiguration.lambda$subscribeEventListener$1(DubboServiceDiscoveryAutoConfiguration.java:541)
	at com.alibaba.nacos.client.naming.core.EventDispatcher$Notifier.run(EventDispatcher.java:128)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:21,778 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24528&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396195585] will notify all URLs : []
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:21,778 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService] is being subscribed for service[name : user-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:21,778 ERROR [com.alibaba.nacos.naming.client.listener][DubboMetadataServiceInvocationHandler.java:54] - No provider available in [invoker :interface org.apache.dubbo.rpc.service.GenericService -> spring-cloud://localhost:9090/org.apache.dubbo.registry.RegistryService?anyhost=true&application=uaa-service&bind.ip=192.168.1.6&bind.port=20880&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24528&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.1.6&release=2.7.3&remote.application=user-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0,directory: org.apache.dubbo.registry.integration.RegistryDirectory@ca2cd5e, invoker :interface org.apache.dubbo.rpc.service.GenericService -> nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?anyhost=true&application=uaa-service&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=24528&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.1.6&release=2.7.3&remote.application=user-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0,directory: org.apache.dubbo.registry.integration.RegistryDirectory@5c997de8]
org.apache.dubbo.rpc.RpcException: No provider available in [invoker :interface org.apache.dubbo.rpc.service.GenericService -> spring-cloud://localhost:9090/org.apache.dubbo.registry.RegistryService?anyhost=true&application=uaa-service&bind.ip=192.168.1.6&bind.port=20880&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24528&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.1.6&release=2.7.3&remote.application=user-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0,directory: org.apache.dubbo.registry.integration.RegistryDirectory@ca2cd5e, invoker :interface org.apache.dubbo.rpc.service.GenericService -> nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?anyhost=true&application=uaa-service&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=24528&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.1.6&release=2.7.3&remote.application=user-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1625396192348&version=1.0.0,directory: org.apache.dubbo.registry.integration.RegistryDirectory@5c997de8]
	at org.apache.dubbo.rpc.cluster.support.RegistryAwareClusterInvoker.doInvoke(RegistryAwareClusterInvoker.java:59)
	at org.apache.dubbo.rpc.cluster.support.AbstractClusterInvoker.invoke(AbstractClusterInvoker.java:248)
	at org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvoker.invoke(MockClusterInvoker.java:78)
	at org.apache.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:55)
	at org.apache.dubbo.common.bytecode.proxy0.$invoke(proxy0.java)
	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceInvocationHandler.invoke(DubboMetadataServiceInvocationHandler.java:49)
	at com.sun.proxy.$Proxy137.getExportedURLs(Unknown Source)
	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry.getExportedURLs(AbstractSpringCloudRegistry.java:328)
	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry.subscribeDubboServiceURL(AbstractSpringCloudRegistry.java:260)
	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry$1.onApplicationEvent(AbstractSpringCloudRegistry.java:193)
	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry$1.onApplicationEvent(AbstractSpringCloudRegistry.java:186)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceDiscoveryAutoConfiguration.dispatchServiceInstancesChangedEvent(DubboServiceDiscoveryAutoConfiguration.java:161)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceDiscoveryAutoConfiguration.access$200(DubboServiceDiscoveryAutoConfiguration.java:107)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceDiscoveryAutoConfiguration$NacosConfiguration.lambda$subscribeEventListener$1(DubboServiceDiscoveryAutoConfiguration.java:541)
	at com.alibaba.nacos.client.naming.core.EventDispatcher$Notifier.run(EventDispatcher.java:128)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:21,780 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396199891] will notify all URLs : []
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:21,780 DEBUG [com.alibaba.nacos.naming.client.listener][RegistryProtocol.java:524] -  [DUBBO] original override urls: [], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:21,780 DEBUG [com.alibaba.nacos.naming.client.listener][RegistryProtocol.java:528] -  [DUBBO] subscribe url: provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24528&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396199891, override urls: [], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:38,084 INFO [dubbo-client-idleCheck-thread-1][ReconnectTimerTask.java:48] -  [DUBBO] Initial connection to HeaderExchangeClient [channel=org.apache.dubbo.remoting.transport.netty4.NettyClient [192.168.1.6:0 -> /192.168.1.6:20880]], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:38,088 INFO [dubbo-client-idleCheck-thread-1][NettyClient.java:142] -  [DUBBO] Close old netty channel [id: 0x91a5b2b7, L:/192.168.1.6:60922 ! R:/192.168.1.6:20880] on create new netty channel [id: 0x2bed2f10, L:/192.168.1.6:62043 - R:/192.168.1.6:20880], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:38,089 INFO [dubbo-client-idleCheck-thread-1][AbstractClient.java:199] -  [DUBBO] Succeed connect to server /192.168.1.6:20880 from NettyClient 192.168.1.6 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0x2bed2f10, L:/192.168.1.6:62043 - R:/192.168.1.6:20880]], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 18:59:39,908 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
