[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:10,284 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:10,311 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:10,321 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=uaa-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22220, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:10,938 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b0cd7d6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:11,056 INFO [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:12,640 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=uaa-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22220, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.shanjupay}
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:12,822 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:12,836 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:12,845 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'jwt.yaml', group: 'COMMON_GROUP'
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:12,852 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'uaa-service.yaml', group: 'SHANJUPAY_GROUP'
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:12,854 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1636178473 {name='uaa-service.yaml', properties={spring.datasource.druid.url=jdbc:mysql://localhost:3306/shanjupay_uaa?serverTimezone=GMT%2B8&useSSL=false, server.servlet.context-path=/uaa, spring.datasource.druid.password=gt12z912, spring.datasource.druid.username=root}}, NacosPropertySource@822232612 {name='jwt.yaml', properties={siging-key=shanju123}}, NacosPropertySource@633131207 {name='spring-boot-starter-druid.yaml', properties={spring.datasource.druid.max-active=20, spring.datasource.druid.min-idle=5, spring.datasource.druid.web-stat-filter.principal-cookie-name=admin, spring.datasource.druid.min-evictable-idle-time-millis=300000, spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver, spring.datasource.druid.test-on-return=false, spring.datasource.druid.time-between-eviction-runs-millis=60000, spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*, spring.datasource.druid.filters=config,stat,wall,log4j2, spring.datasource.druid.filter.stat.slow-sql-millis=1, spring.datasource.druid.test-on-borrow=true, spring.datasource.druid.stat-view-servlet.login-password=admin, spring.datasource.druid.validation-query=SELECT 1 FROM DUAL, spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*, spring.datasource.druid.web-stat-filter.session-stat-enable=false, spring.datasource.druid.test-while-idle=true, spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20, spring.datasource.druid.web-stat-filter.enabled=true, spring.datasource.druid.web-stat-filter.session-stat-max-count=1000, spring.datasource.druid.stat-view-servlet.reset-enable=false, spring.datasource.druid.filter.stat.log-slow-sql=true, spring.datasource.druid.web-stat-filter.url-pattern=/*, spring.datasource.druid.stat-view-servlet.allow=127.0.0.1,192.168.163.1, spring.datasource.druid.web-stat-filter.principal-session-name=admin, spring.datasource.druid.web-stat-filter.profile-enable=true, spring.datasource.password=gt12z912, spring.datasource.username=root, spring.datasource.druid.stat-view-servlet.deny=192.168.1.73, spring.datasource.druid.stat-view-servlet.login-username=admin, spring.datasource.druid.stat-view-servlet.enabled=true, spring.datasource.url=jdbc:mysql://localhost:3306/shanjupay_merchant_service?serverTimezone=GMT%2B8&useSSL=false, spring.datasource.druid.initial-size=5, spring.datasource.druid.pool-prepared-statements=true, spring.datasource.druid.aop-patterns=com.shanjupay.*.service.*, spring.datasource.type=com.alibaba.druid.pool.DruidDataSource, spring.datasource.druid.max-wait=60000}}, NacosPropertySource@852190062 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:12,885 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,402 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,406 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,439 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,439 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,440 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,440 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,441 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,442 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,442 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,442 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,443 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,444 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,446 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,446 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,447 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,447 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,448 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,448 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,448 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,448 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,449 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,449 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,449 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,449 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,761 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,766 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:14,863 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 72ms. Found 0 repository interfaces.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:15,029 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:15,178 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:15,178 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:15,216 DEBUG [main][ClassPathScanningCandidateComponentProvider.java:437] - Identified candidate component class: file [C:\Users\Lenovo\IdeaProjects\shanjupay\shanjupay-uaa\shanjupay-uaa-service\target\classes\com\shanjupay\uaa\service\OauthClientDetailsServiceImpl.class]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:15,299 DEBUG [main][ClassPathScanningCandidateComponentProvider.java:437] - Identified candidate component class: file [C:\Users\Lenovo\IdeaProjects\shanjupay\shanjupay-uaa\shanjupay-uaa-service\target\classes\com\shanjupay\uaa\service\OauthClientDetailsServiceImpl.class]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:15,328 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:15,328 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'oauthClientDetailsServiceImpl': Generic bean: class [com.shanjupay.uaa.service.OauthClientDetailsServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\Lenovo\IdeaProjects\shanjupay\shanjupay-uaa\shanjupay-uaa-service\target\classes\com\shanjupay\uaa\service\OauthClientDetailsServiceImpl.class]] } were scanned under package[com.shanjupay], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:15,331 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:15,331 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:15,576 INFO [main][GenericScope.java:294] - BeanFactory id=ae80b025-88db-38cd-939c-3aa9e29bb895
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:15,644 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:15,825 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$94b37a72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:15,997 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:16,018 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:16,028 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$1874c976] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:16,057 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:16,083 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:16,103 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:16,113 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:16,115 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:16,116 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$8ab465f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:16,126 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$1d5e6e48] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:16,135 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:16,141 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:16,151 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$dda3a802] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:16,160 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$d16eb0c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:16,178 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$5c6143f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:16,187 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:16,191 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:17,697 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:17,706 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:17,744 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:17,748 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$a9d240d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,200 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,205 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,213 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,222 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,341 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,342 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,392 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,422 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,430 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$e1f50ca6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,442 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,454 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$1bcb08a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,466 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$f046fa03] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,482 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$a293bc1c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,492 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$5daaa20b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,509 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,516 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,529 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$84761939] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,549 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,557 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$d2529792] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,574 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,578 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,592 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,601 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,650 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,669 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,682 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$aee74606] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,695 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,699 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,711 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,722 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,723 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,746 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,756 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,760 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,763 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:19,792 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b0cd7d6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:20,368 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 56020 (http)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:20,392 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-56020"]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:20,406 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:20,408 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:20,418 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_291\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files\Java\jdk1.8.0_291\bin;C:\MinGW\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64_win\compiler;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Node.js\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\ProgramData\chocolatey\bin;C:\Users\Lenovo\AppData\Local\Programs\Python\Python37;C:\Users\Lenovo\AppData\Local\Programs\Python\Python37\Scripts;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Roaming\npm;C:\windows\;C:\Users\Lenovo\anaconda3\Library\bin\graphviz;C:\Program Files\Pandoc\;D:\MySQL\MySQL Server 8.0\bin;D:\MySQL\maven\apache-maven-3.5.2-bin\apache-maven-3.5.2\bin;D:\MySQL\Git\cmd;D:\Node;D:\Yarn\bin\;C:\Users\Lenovo\IdeaProjects\shanjupay\shanjupay-web\project-juhezhifu-admin-vue\node_modules\.bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Roaming\npm;C:\windows\;C:\Program Files\JetBrains\PyCharm Community Edition 2020.3.3\bin;;C:\Users\Lenovo\AppData\Local\Yarn\bin;.]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:20,759 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:20,760 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 7861 ms
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:21,564 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:21,991 DEBUG [main][Log4j2Filter.java:132] - {conn-10001,procId-210} connected
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,002 DEBUG [main][Log4j2Filter.java:132] - {conn-10002,procId-211} connected
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,009 DEBUG [main][Log4j2Filter.java:132] - {conn-10003,procId-212} connected
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,015 DEBUG [main][Log4j2Filter.java:132] - {conn-10004,procId-213} connected
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,020 DEBUG [main][Log4j2Filter.java:132] - {conn-10005,procId-214} connected
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,027 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,232 DEBUG [main][InternalLoggerFactory.java:43] - Using SLF4J as the default logging framework
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,242 DEBUG [main][DefaultClientResources.java:109] - -Dio.netty.eventLoopThreads: 8
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,266 DEBUG [main][DefaultEventLoopGroupProvider.java:138] - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,317 DEBUG [main][ResourceLeakDetector.java:129] - -Dio.netty.leakDetection.level: simple
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,317 DEBUG [main][ResourceLeakDetector.java:130] - -Dio.netty.leakDetection.targetRecords: 4
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,323 DEBUG [main][PlatformDependent.java:955] - Platform: Windows
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,326 DEBUG [main][PlatformDependent0.java:395] - -Dio.netty.noUnsafe: false
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,327 DEBUG [main][PlatformDependent0.java:871] - Java version: 8
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,329 DEBUG [main][PlatformDependent0.java:120] - sun.misc.Unsafe.theUnsafe: available
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,331 DEBUG [main][PlatformDependent0.java:144] - sun.misc.Unsafe.copyMemory: available
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,332 DEBUG [main][PlatformDependent0.java:182] - java.nio.Buffer.address: available
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,333 DEBUG [main][PlatformDependent0.java:243] - direct buffer constructor: available
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,335 DEBUG [main][PlatformDependent0.java:313] - java.nio.Bits.unaligned: available, true
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,335 DEBUG [main][PlatformDependent0.java:378] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,335 DEBUG [main][PlatformDependent0.java:385] - java.nio.DirectByteBuffer.<init>(long, int): available
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,336 DEBUG [main][PlatformDependent.java:992] - sun.misc.Unsafe: available
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,337 DEBUG [main][PlatformDependent.java:1086] - -Dio.netty.tmpdir: C:\Users\Lenovo\AppData\Local\Temp (java.io.tmpdir)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,337 DEBUG [main][PlatformDependent.java:1165] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,340 DEBUG [main][PlatformDependent.java:157] - -Dio.netty.maxDirectMemory: 3786407936 bytes
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,341 DEBUG [main][PlatformDependent.java:164] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,343 DEBUG [main][CleanerJava6.java:92] - java.nio.ByteBuffer.cleaner(): available
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,343 DEBUG [main][PlatformDependent.java:184] - -Dio.netty.noPreferDirect: false
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,344 DEBUG [main][ResourceLeakDetectorFactory.java:202] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6b16de91
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,349 DEBUG [main][PlatformDependent.java:860] - org.jctools-core.MpscChunkedArrayQueue: available
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,375 DEBUG [main][Loggers.java:249] - Using Slf4j logging framework
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,406 DEBUG [main][Loggers.java:249] - Starting UnsafeSupport init in Java 1.8
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,407 DEBUG [main][Loggers.java:249] - Unsafe is available
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,539 DEBUG [main][PooledByteBufAllocator.java:126] - -Dio.netty.allocator.numHeapArenas: 16
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,539 DEBUG [main][PooledByteBufAllocator.java:127] - -Dio.netty.allocator.numDirectArenas: 16
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,540 DEBUG [main][PooledByteBufAllocator.java:129] - -Dio.netty.allocator.pageSize: 8192
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,540 DEBUG [main][PooledByteBufAllocator.java:134] - -Dio.netty.allocator.maxOrder: 11
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,540 DEBUG [main][PooledByteBufAllocator.java:138] - -Dio.netty.allocator.chunkSize: 16777216
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,541 DEBUG [main][PooledByteBufAllocator.java:139] - -Dio.netty.allocator.tinyCacheSize: 512
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,541 DEBUG [main][PooledByteBufAllocator.java:140] - -Dio.netty.allocator.smallCacheSize: 256
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,541 DEBUG [main][PooledByteBufAllocator.java:141] - -Dio.netty.allocator.normalCacheSize: 64
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,542 DEBUG [main][PooledByteBufAllocator.java:142] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,542 DEBUG [main][PooledByteBufAllocator.java:143] - -Dio.netty.allocator.cacheTrimInterval: 8192
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,542 DEBUG [main][PooledByteBufAllocator.java:144] - -Dio.netty.allocator.useCacheForAllThreads: true
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,543 DEBUG [main][PooledByteBufAllocator.java:145] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,551 DEBUG [main][InternalThreadLocalMap.java:54] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:22,552 DEBUG [main][InternalThreadLocalMap.java:57] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:23,781 WARN [main][JwtAccessTokenConverter.java:302] - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,048 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,181 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,206 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,280 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,318 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,332 INFO [main][AnnotatedInterfaceConfigBeanBuilder.java:84] - The configBean[type:ReferenceBean] has been built.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,361 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,441 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,442 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,471 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,487 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,487 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,491 DEBUG [main][SpringExtensionFactory.java:99] -  [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.1.6
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.shanjupay.uaa.UAABootstrap.main(UAABootstrap.java:14)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,503 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,545 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,564 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396484361, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,564 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396484361] should not be registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,578 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396484361, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,589 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.1.6/com.shanjupay.user.api.TenantService] is being subscribed for service[name : gateway-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,590 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,591 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : gateway-service] is about to be initialized
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,671 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : gateway-service] does not expose The REST metadata in the Dubbo services.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,672 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,672 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.1.6/com.shanjupay.user.api.TenantService] is being subscribed for service[name : user-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,672 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] can't be found when the subscribed service[name : user-service], and then try to initialize it
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,673 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : user-service] is about to be initialized
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,762 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,766 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,767 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,768 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.1.6/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396484762&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,769 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.1.6/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396484762&version=1.0.0] should not be registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,769 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.1.6/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396484762&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,810 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,839 DEBUG [main][MultithreadEventLoopGroup.java:44] - -Dio.netty.eventLoopThreads: 16
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,848 DEBUG [main][NioEventLoop.java:105] - -Dio.netty.noKeySetOptimization: false
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,848 DEBUG [main][NioEventLoop.java:106] - -Dio.netty.selectorAutoRebuildThreshold: 512
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,903 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:24,927 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:25,014 DEBUG [main][DefaultChannelId.java:79] - -Dio.netty.processId: 18332 (auto-detected)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:25,019 DEBUG [main][NetUtil.java:139] - -Djava.net.preferIPv4Stack: false
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:25,020 DEBUG [main][NetUtil.java:140] - -Djava.net.preferIPv6Addresses: false
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:26,017 DEBUG [main][NetUtil.java:224] - Loopback interface: [lo, Software Loopback Interface 1, 127.0.0.1] ([lo, Software Loopback Interface 1, 127.0.0.1], {})
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:26,018 DEBUG [main][NetUtil.java:289] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,042 DEBUG [main][DefaultChannelId.java:101] - -Dio.netty.machineId: 44:85:00:ff:fe:ac:ff:71 (auto-detected)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,084 DEBUG [main][ByteBufUtil.java:83] - -Dio.netty.allocator.type: pooled
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,085 DEBUG [main][ByteBufUtil.java:92] - -Dio.netty.threadLocalDirectBufferSize: 0
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,085 DEBUG [main][ByteBufUtil.java:95] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,138 INFO [main][AbstractClient.java:199] -  [DUBBO] Succeed connect to server /192.168.1.6:20880 from NettyClient 192.168.1.6 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0xf52bce0e, L:/192.168.1.6:62670 - R:/192.168.1.6:20880]], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,139 INFO [main][AbstractClient.java:71] -  [DUBBO] Start NettyClient LAPTOP-Q3EN03O1/192.168.1.6 connect to the server /192.168.1.6:20880, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,404 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,426 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,449 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,481 INFO [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\Lenovo\.dubbo\dubbo-registry-uaa-service-127.0.0.1:8848.cache, data: {com.shanjupay.user.api.AuthorizationService=dubbo://192.168.1.6:20880/com.shanjupay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.shanjupay.user.api.AuthorizationService&pid=19040&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1625396353289, transaction-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.1.6:20893/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=transaction-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=transaction-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=16660&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625392252835&version=1.0.0, payment-agent-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.1.6:20896/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=payment-agent-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=payment-agent-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=26280&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625392468805&version=1.0.0, user-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.1.6:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=19040&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625396360722&version=1.0.0, merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.1.6:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=8092&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625392319400&version=1.0.0, merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.1.6:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=21020&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625392740294&version=1.0.0, com.shanjupay.user.api.TenantService=dubbo://192.168.1.6:20880/com.shanjupay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&path=com.shanjupay.user.api.TenantService&pid=19040&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1625396359067}, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,487 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.1.6/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396484762&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,495 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.1.6/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396484762&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,506 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.1.6/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396484762&version=1.0.0, urls: [dubbo://192.168.1.6:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=19040&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625396360722&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,509 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.1.6/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396484762&version=1.0.0, urls: [dubbo://192.168.1.6:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=19040&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625396360722&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,513 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=18332&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Duser-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D18332%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.1.6%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1625396484762%26version%3D1.0.0&register.ip=192.168.1.6&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396484762&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,563 DEBUG [main][Recycler.java:96] - -Dio.netty.recycler.maxCapacityPerThread: 4096
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,563 DEBUG [main][Recycler.java:97] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,564 DEBUG [main][Recycler.java:98] - -Dio.netty.recycler.linkCapacity: 16
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,564 DEBUG [main][Recycler.java:99] - -Dio.netty.recycler.ratio: 8
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,589 DEBUG [NettyClientWorker-4-1][AbstractByteBuf.java:61] - -Dio.netty.buffer.checkAccessible: true
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,589 DEBUG [NettyClientWorker-4-1][AbstractByteBuf.java:62] - -Dio.netty.buffer.checkBounds: true
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,589 DEBUG [NettyClientWorker-4-1][ResourceLeakDetectorFactory.java:202] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5d647333
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,692 DEBUG [DubboClientHandler-192.168.1.6:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,693 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : user-service] does not expose The REST metadata in the Dubbo services.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,700 DEBUG [DubboClientHandler-192.168.1.6:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,705 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396484361] will notify all URLs : [dubbo://192.168.1.6:20880?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=19040&register=true&release=2.7.3&side=provider&timestamp=1625396359067]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,707 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396484361, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,713 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396484361, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,720 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396484361, urls: [dubbo://192.168.1.6:20880/com.shanjupay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&path=com.shanjupay.user.api.TenantService&pid=19040&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1625396359067], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,721 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396484361, urls: [dubbo://192.168.1.6:20880/com.shanjupay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&path=com.shanjupay.user.api.TenantService&pid=19040&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1625396359067], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,722 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service com.shanjupay.user.api.TenantService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=18332&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.shanjupay.user.api.TenantService%26lazy%3Dfalse%26methods%3DmodifyBundle%2CgetTenantByAccount%2CgetAccountByUsername%2CcreateBundle%2CinitBundle%2Clogin%2CisExistAccountByUsername%2CgetBundle%2CunbindTenant%2CremoveTenant%2CqueryBundleByTenantType%2CqueryTenants%2CgetAccountByMobile%2CgetApplicationDTOByClientId%2CqueryAccount%2CchangeBundle%2CisExistAccountInTenantByUsername%2CcreateAccountInTenant%2Cauthentication%2CqueryAccountRole%2CqueryAccountInTenant%2CisExistAccountByMobile%2CsendMessage%2CcreateTenantRelateAccount%2CqueryAllBundle%2CcreateAccount%2CgetTenant%2CqueryAdministratorByPage%2CisExistAccountInTenantByMobile%2CcreateTenantAndAccount%2CaccountPassword%2CbindTenant%26pid%3D18332%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.1.6%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1625396484361&register.ip=192.168.1.6&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396484361, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,771 INFO [main][AnnotatedInterfaceConfigBeanBuilder.java:84] - The configBean[type:ReferenceBean] has been built.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,776 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,792 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,792 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,800 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396487776, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,800 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396487776] should not be registered.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,801 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396487776, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,801 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService] is being subscribed for service[name : gateway-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,801 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,801 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,802 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,802 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService] is being subscribed for service[name : user-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,805 DEBUG [DubboClientHandler-192.168.1.6:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,806 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396487776] will notify all URLs : [dubbo://192.168.1.6:20880?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=19040&register=true&release=2.7.3&side=provider&timestamp=1625396353289]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,807 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396487776, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,812 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396487776, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,819 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396487776, urls: [dubbo://192.168.1.6:20880/com.shanjupay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.shanjupay.user.api.AuthorizationService&pid=19040&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1625396353289], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,820 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396487776, urls: [dubbo://192.168.1.6:20880/com.shanjupay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.shanjupay.user.api.AuthorizationService&pid=19040&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1625396353289], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:27,821 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service com.shanjupay.user.api.AuthorizationService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=18332&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.shanjupay.user.api.AuthorizationService%26lazy%3Dfalse%26methods%3DremoveRole%2CroleBindPrivilege%2CmodifyRole%2CcreateRole%2CunbindAccountRole%2CqueryPrivilege%2CqueryRole%2CqueryPrivilegeTree%2CqueryRoleByPage%2CbindAccountRole%2CqueryPrivilegeByGroupId%2CqueryTenantRole%2Cauthorize%26pid%3D18332%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.1.6%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1625396487776&register.ip=192.168.1.6&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396487776, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:28,433 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:28,434 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:28,442 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:28,442 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:28,505 DEBUG [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:28,507 DEBUG [main][ResourceBundleMessageInterpolator.java:89] - Loaded expression factory via original TCCL
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:28,524 DEBUG [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:28,525 DEBUG [main][ConfigurationImpl.java:148] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:28,525 DEBUG [main][ConfigurationImpl.java:180] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:28,526 DEBUG [main][ConfigurationImpl.java:194] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:28,526 DEBUG [main][ValidationXmlParser.java:120] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:28,527 DEBUG [main][ResourceLoaderHelper.java:53] - Trying to load META-INF/validation.xml via user class loader
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:28,527 DEBUG [main][ResourceLoaderHelper.java:60] - Trying to load META-INF/validation.xml via TCCL
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:28,528 DEBUG [main][ResourceLoaderHelper.java:66] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:28,528 DEBUG [main][ValidationXmlParser.java:127] - No META-INF/validation.xml found. Using annotation based configuration only.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:28,535 DEBUG [main][ValidatorFactoryImpl.java:578] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:28,535 DEBUG [main][ValidatorFactoryImpl.java:579] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:28,535 DEBUG [main][ValidatorFactoryImpl.java:580] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:28,535 DEBUG [main][ValidatorFactoryImpl.java:581] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:28,535 DEBUG [main][ValidatorFactoryImpl.java:582] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:28,822 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:29,484 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:29,547 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:30,598 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/public/**'], []
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:30,599 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:30,599 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/v2/**'], []
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:30,599 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/swagger**'], []
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:30,599 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/static/**'], []
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:30,599 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/resources/**'], []
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:30,952 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2ccecae2, org.springframework.security.web.context.SecurityContextPersistenceFilter@719bb60d, org.springframework.security.web.header.HeaderWriterFilter@2dd08ff1, org.springframework.security.web.authentication.logout.LogoutFilter@69944a90, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@1293f8d7, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6068cda1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49639118, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3855b27e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@37ade216, org.springframework.security.web.session.SessionManagementFilter@3bf26810, org.springframework.security.web.access.ExceptionTranslationFilter@6f785a27, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7744195]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:30,982 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@215a329c, org.springframework.security.web.context.SecurityContextPersistenceFilter@7fa85a55, org.springframework.security.web.header.HeaderWriterFilter@7be859de, org.springframework.security.web.authentication.logout.LogoutFilter@10a064bd, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@23c00420, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@cb1c58c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@352e4b6d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@20723ee, org.springframework.security.web.session.SessionManagementFilter@40fcaae7, org.springframework.security.web.access.ExceptionTranslationFilter@113c4ad6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3ca3eba2]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:31,645 INFO [main][EndpointLinksResolver.java:59] - Exposing 4 endpoint(s) beneath base path '/actuator'
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,260 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,260 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : user-service] has been initialized
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,260 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,405 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,407 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : gateway-service , size : 1] change is about to be dispatched
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,414 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.1.6/com.shanjupay.user.api.TenantService] is being subscribed for service[name : gateway-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,415 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,416 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,418 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,419 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService] is being subscribed for service[name : gateway-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,419 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,419 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,419 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,424 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : user-service , size : 1] change is about to be dispatched
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,424 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.1.6/com.shanjupay.user.api.TenantService] is being subscribed for service[name : user-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,447 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.shanjupay.uua.api.OauthClientDetailsService, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,450 DEBUG [DubboClientHandler-192.168.1.6:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,451 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.1.6/com.shanjupay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396484361] will notify all URLs : [dubbo://192.168.1.6:20880?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.TenantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=19040&register=true&release=2.7.3&side=provider&timestamp=1625396359067]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,452 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService] is being subscribed for service[name : user-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,456 DEBUG [DubboClientHandler-192.168.1.6:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,457 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.1.6/com.shanjupay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.shanjupay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=18332&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1625396487776] will notify all URLs : [dubbo://192.168.1.6:20880?anyhost=true&application=user-service&bean.name=ServiceBean:com.shanjupay.user.api.AuthorizationService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=19040&register=true&release=2.7.3&side=provider&timestamp=1625396353289]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,471 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,526 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.shanjupay.uua.api.OauthClientDetailsService to local registry url : injvm://127.0.0.1/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=18332&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396492477, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,526 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.shanjupay.uua.api.OauthClientDetailsService to url dubbo://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=18332&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396492477, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,528 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,528 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.uua.api.OauthClientDetailsService url dubbo://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=18332&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396492477 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&pid=18332&qos.enable=false&qos.port=22220&registry=spring-cloud&release=2.7.3&timestamp=1625396492473, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,605 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.1.6:20881, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:32,618 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=18332&register=true&release=2.7.3&side=provider&timestamp=1625396492477, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,185 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=18332&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396492477, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,185 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService] is being subscribed for service[name : gateway-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,185 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.shanjupay.uua.api.OauthClientDetailsService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,185 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,186 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.shanjupay.uua.api.OauthClientDetailsService] still can't be found, it could effect the further Dubbo service invocation
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,186 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService] is being subscribed for service[name : user-service]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,189 DEBUG [DubboClientHandler-192.168.1.6:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,190 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=18332&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396492477] will notify all URLs : []
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,190 DEBUG [main][RegistryProtocol.java:524] -  [DUBBO] original override urls: [], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,190 DEBUG [main][RegistryProtocol.java:528] -  [DUBBO] subscribe url: provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=18332&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396492477, override urls: [], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,191 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,191 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.shanjupay.uua.api.OauthClientDetailsService url dubbo://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=18332&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396492477 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&pid=18332&qos.enable=false&qos.port=22220&registry=nacos&release=2.7.3&timestamp=1625396492473, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,192 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=18332&register=true&release=2.7.3&side=provider&timestamp=1625396492477, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,198 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=18332&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396492477, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,207 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=18332&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396492477, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,208 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.1.6:20881/com.shanjupay.uua.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.shanjupay.uua.api.OauthClientDetailsService&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.shanjupay.uua.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=18332&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1625396492477, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,219 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-56020"]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,266 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 56020 (http) with context path '/uaa'
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,289 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,299 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.1.6&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=18332&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625396494289&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,300 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.1.6:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.1.6&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=18332&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625396494289&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,300 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,300 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.1.6:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.1.6&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=18332&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625396494289&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&pid=18332&qos.enable=false&qos.port=22220&registry=nacos&release=2.7.3&timestamp=1625396494289, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,302 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.1.6:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=18332&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625396494289&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,307 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.1.6:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=18332&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625396494289&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,313 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.1.6:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=18332&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625396494289&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,314 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.1.6:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.1.6&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=18332&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1625396494289&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,314 INFO [main][DubboMetadataServiceExporter.java:86] - The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@55c20a91" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" exported="true" unexported="false" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" dynamic="true" version="1.0.0" group="uaa-service" register="true" deprecated="false" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been exported.
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,336 INFO [main][NacosServiceRegistry.java:62] - nacos registry, uaa-service 192.168.1.6:56020 register finished
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:34,341 INFO [main][StartupInfoLogger.java:59] - Started UAABootstrap in 26.094 seconds (JVM running for 30.02)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:37,865 DEBUG [RMI TCP Connection(6)-192.168.1.6][Log4j2Filter.java:132] - {conn-10005} pool-connect
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:37,874 DEBUG [RMI TCP Connection(6)-192.168.1.6][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:37,886 DEBUG [RMI TCP Connection(6)-192.168.1.6][Log4j2Filter.java:132] - {conn-10005} pool-connect
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:37,893 DEBUG [RMI TCP Connection(6)-192.168.1.6][Log4j2Filter.java:137] - {conn-10005, stmt-20000} created
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,044 DEBUG [RMI TCP Connection(6)-192.168.1.6][Log4j2Filter.java:137] - {conn-10005, stmt-20000, rs-50000} query executed. 142.9154 millis. /* ping */ SELECT 1
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,045 DEBUG [RMI TCP Connection(6)-192.168.1.6][Log4j2Filter.java:142] - {conn-10005, stmt-20000, rs-50000} open
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,048 DEBUG [RMI TCP Connection(6)-192.168.1.6][Log4j2Filter.java:142] - {conn-10005, stmt-20000, rs-50000} Header: [1]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,052 DEBUG [RMI TCP Connection(6)-192.168.1.6][Log4j2Filter.java:142] - {conn-10005, stmt-20000, rs-50000} Result: [1]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,054 DEBUG [RMI TCP Connection(6)-192.168.1.6][Log4j2Filter.java:142] - {conn-10005, stmt-20000, rs-50000} closed
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,055 DEBUG [RMI TCP Connection(6)-192.168.1.6][Log4j2Filter.java:137] - {conn-10005, stmt-20000} closed
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,055 DEBUG [RMI TCP Connection(6)-192.168.1.6][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,067 DEBUG [RMI TCP Connection(6)-192.168.1.6][RedisClient.java:261] - Trying to get a Redis connection for: RedisURI [host='localhost', port=6379]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,268 INFO [RMI TCP Connection(6)-192.168.1.6][EpollProvider.java:68] - Starting without optional epoll library
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,276 INFO [RMI TCP Connection(6)-192.168.1.6][KqueueProvider.java:70] - Starting without optional kqueue library
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,278 DEBUG [RMI TCP Connection(6)-192.168.1.6][DefaultEventLoopGroupProvider.java:64] - Allocating executor io.netty.channel.nio.NioEventLoopGroup
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,278 DEBUG [RMI TCP Connection(6)-192.168.1.6][DefaultEventLoopGroupProvider.java:138] - Creating executor io.netty.channel.nio.NioEventLoopGroup
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,302 DEBUG [RMI TCP Connection(6)-192.168.1.6][DefaultEventLoopGroupProvider.java:77] - Adding reference to io.netty.channel.nio.NioEventLoopGroup@46f3b86e, existing ref count 0
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,315 DEBUG [RMI TCP Connection(6)-192.168.1.6][RedisClient.java:734] - Resolved SocketAddress localhost:6379 using RedisURI [host='localhost', port=6379]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,316 DEBUG [RMI TCP Connection(6)-192.168.1.6][AbstractRedisClient.java:304] - Connecting to Redis at localhost:6379
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,348 DEBUG [lettuce-nioEventLoop-7-1][CommandHandler.java:154] - [channel=0xa32ebe26, [id: 0x68192295] (inactive), chid=0x1] channelRegistered()
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,354 DEBUG [lettuce-nioEventLoop-7-1][CommandHandler.java:263] - [channel=0xa32ebe26, /127.0.0.1:62797 -> localhost/127.0.0.1:6379, chid=0x1] channelActive()
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,355 DEBUG [lettuce-nioEventLoop-7-1][DefaultEndpoint.java:371] - [channel=0xa32ebe26, /127.0.0.1:62797 -> localhost/127.0.0.1:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,356 DEBUG [lettuce-nioEventLoop-7-1][DefaultEndpoint.java:376] - [channel=0xa32ebe26, /127.0.0.1:62797 -> localhost/127.0.0.1:6379, epid=0x1] activating endpoint
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,356 DEBUG [lettuce-nioEventLoop-7-1][DefaultEndpoint.java:453] - [channel=0xa32ebe26, /127.0.0.1:62797 -> localhost/127.0.0.1:6379, epid=0x1] flushCommands()
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,356 DEBUG [lettuce-nioEventLoop-7-1][DefaultEndpoint.java:468] - [channel=0xa32ebe26, /127.0.0.1:62797 -> localhost/127.0.0.1:6379, epid=0x1] flushCommands() Flushing 0 commands
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,357 DEBUG [lettuce-nioEventLoop-7-1][ConnectionWatchdog.java:159] - [channel=0xa32ebe26, /127.0.0.1:62797 -> localhost/127.0.0.1:6379, last known addr=localhost/127.0.0.1:6379] channelActive()
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,357 DEBUG [lettuce-nioEventLoop-7-1][ConnectionWatchdog.java:159] - [channel=0xa32ebe26, /127.0.0.1:62797 -> localhost/127.0.0.1:6379, last known addr=localhost/127.0.0.1:6379] channelActive()
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,357 DEBUG [lettuce-nioEventLoop-7-1][CommandHandler.java:277] - [channel=0xa32ebe26, /127.0.0.1:62797 -> localhost/127.0.0.1:6379, chid=0x1] channelActive() done
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,359 DEBUG [lettuce-nioEventLoop-7-1][AbstractRedisClient.java:337] - Connecting to Redis at localhost:6379: Success
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,363 DEBUG [lettuce-nioEventLoop-7-1][ConnectionWatchdog.java:127] - [channel=0xa32ebe26, /127.0.0.1:62797 -> localhost/127.0.0.1:6379, last known addr=localhost/127.0.0.1:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@cc8fff5)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,364 DEBUG [lettuce-nioEventLoop-7-1][ConnectionWatchdog.java:127] - [channel=0xa32ebe26, /127.0.0.1:62797 -> localhost/127.0.0.1:6379, last known addr=localhost/127.0.0.1:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@cc8fff5)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,423 DEBUG [RMI TCP Connection(6)-192.168.1.6][RedisChannelHandler.java:171] - dispatching command SubscriptionCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,425 DEBUG [RMI TCP Connection(6)-192.168.1.6][DefaultEndpoint.java:339] - [channel=0xa32ebe26, /127.0.0.1:62797 -> localhost/127.0.0.1:6379, epid=0x1] write() writeAndFlush command SubscriptionCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,426 DEBUG [lettuce-nioEventLoop-7-1][CommandHandler.java:341] - [channel=0xa32ebe26, /127.0.0.1:62797 -> localhost/127.0.0.1:6379, chid=0x1] write(ctx, SubscriptionCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,431 DEBUG [RMI TCP Connection(6)-192.168.1.6][DefaultEndpoint.java:153] - [channel=0xa32ebe26, /127.0.0.1:62797 -> localhost/127.0.0.1:6379, epid=0x1] write() done
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,434 DEBUG [lettuce-nioEventLoop-7-1][CommandEncoder.java:99] - [channel=0xa32ebe26, /127.0.0.1:62797 -> localhost/127.0.0.1:6379] writing command SubscriptionCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,435 DEBUG [lettuce-nioEventLoop-7-1][CommandHandler.java:536] - [[channel=0xa32ebe26, /127.0.0.1:62797 -> localhost/127.0.0.1:6379, chid=0x1], 34, 1] Received: [[channel=0xa32ebe26, /127.0.0.1:62797 -> localhost/127.0.0.1:6379, chid=0x1], 34, 1] bytes, {} commands in the stack
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,435 DEBUG [lettuce-nioEventLoop-7-1][CommandHandler.java:581] - [channel=0xa32ebe26, /127.0.0.1:62797 -> localhost/127.0.0.1:6379, chid=0x1] Stack contains: 1 commands
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,435 DEBUG [lettuce-nioEventLoop-7-1][RedisStateMachine.java:93] - Decode LatencyMeteredCommand [type=INFO, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,441 DEBUG [lettuce-nioEventLoop-7-1][RedisStateMachine.java:190] - Decoded LatencyMeteredCommand [type=INFO, output=StatusOutput [output=null, error='NOAUTH Authentication required.'], commandType=io.lettuce.core.RedisPublisher$SubscriptionCommand], empty stack: true
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,641 INFO [RMI TCP Connection(7)-192.168.1.6][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,642 INFO [RMI TCP Connection(7)-192.168.1.6][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:38,671 INFO [RMI TCP Connection(7)-192.168.1.6][FrameworkServlet.java:546] - Completed initialization in 29 ms
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,319 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-connect
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,396 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} created. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,406 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Parameters : [merchant-platform]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,406 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Types : [VARCHAR]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,410 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20001, rs-50001} query executed. 3.954 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,410 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50001} open
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,411 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50001} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,411 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50001} Result: [merchant-platform, 123456, shanju-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,413 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50001} closed
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,414 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} clearParameters. 
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,415 DEBUG [http-nio-56020-exec-2][PreparedStatementPool.java:129] - {conn-10005, pstmt-20001} enter cache
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,415 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,485 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-connect
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,486 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Parameters : [merchant-platform]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,486 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Types : [VARCHAR]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,487 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20001, rs-50002} query executed. 1.227 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,487 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50002} open
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,487 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50002} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,489 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50002} Result: [merchant-platform, 123456, shanju-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,489 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50002} closed
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,490 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} clearParameters. 
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,490 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,495 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-connect
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,495 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Parameters : [merchant-platform]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,495 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Types : [VARCHAR]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,497 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20001, rs-50003} query executed. 1.3497 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,497 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50003} open
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,497 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50003} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,498 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50003} Result: [merchant-platform, 123456, shanju-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,498 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50003} closed
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,499 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} clearParameters. 
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,499 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,514 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-connect
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,514 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Parameters : [merchant-platform]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,515 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Types : [VARCHAR]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,516 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20001, rs-50004} query executed. 1.5272 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,516 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50004} open
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,517 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50004} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,517 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50004} Result: [merchant-platform, 123456, shanju-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,518 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50004} closed
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,518 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} clearParameters. 
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,518 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,744 DEBUG [DubboClientHandler-192.168.1.6:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:48,752 ERROR [http-nio-56020-exec-2][TokenEndpoint.java:169] - Handling error: NestedServletException, Handler dispatch failed; nested exception is java.lang.ExceptionInInitializerError
org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.ExceptionInInitializerError
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1053)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter.successfulAuthentication(ClientCredentialsTokenEndpointFilter.java:131)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:240)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:679)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ExceptionInInitializerError
	at com.shanjupay.user.service.TenantServiceImpl.getAccountByUsername(TenantServiceImpl.java:521)
	at com.shanjupay.user.service.TenantServiceImpl.authentication(TenantServiceImpl.java:654)
	at com.shanjupay.user.service.TenantServiceImpl.login(TenantServiceImpl.java:710)
	at com.shanjupay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$5c82a28f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.shanjupay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$e0b11be2.login(<generated>)
	at com.shanjupay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$5c82a28f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.shanjupay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$e3a0da6a.login(<generated>)
	at org.apache.dubbo.common.bytecode.Wrapper3.invokeMethod(Wrapper3.java)
	at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
	at org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)
	at org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)
	at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:96)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:148)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)
	at org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)
	at org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	... 1 more
Caused by: java.lang.RuntimeException: java.lang.ClassNotFoundException: Cannot find implementation for com.shanjupay.user.convert.AccountConvert
	at org.mapstruct.factory.Mappers.getMapper(Mappers.java:79)
	at com.shanjupay.user.convert.AccountConvert.<clinit>(AccountConvert.java:14)
	... 49 more
Caused by: java.lang.ClassNotFoundException: Cannot find implementation for com.shanjupay.user.convert.AccountConvert
	at org.mapstruct.factory.Mappers.getMapper(Mappers.java:93)
	at org.mapstruct.factory.Mappers.getMapper(Mappers.java:76)
	... 50 more
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,278 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:132] - {conn-10005} pool-connect
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,278 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Parameters : [merchant-platform]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,278 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Types : [VARCHAR]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,279 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20001, rs-50005} query executed. 1.2721 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,280 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50005} open
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,280 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50005} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,281 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50005} Result: [merchant-platform, 123456, shanju-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,281 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50005} closed
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,281 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} clearParameters. 
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,282 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,289 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:132] - {conn-10005} pool-connect
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,289 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Parameters : [merchant-platform]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,289 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Types : [VARCHAR]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,290 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20001, rs-50006} query executed. 1.2425 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,291 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50006} open
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,291 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50006} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,292 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50006} Result: [merchant-platform, 123456, shanju-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,292 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50006} closed
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,292 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} clearParameters. 
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,292 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,296 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:132] - {conn-10005} pool-connect
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,296 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Parameters : [merchant-platform]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,297 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Types : [VARCHAR]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,298 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20001, rs-50007} query executed. 1.3077 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,298 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50007} open
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,298 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50007} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,299 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50007} Result: [merchant-platform, 123456, shanju-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,299 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50007} closed
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,300 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} clearParameters. 
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,300 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,304 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:132] - {conn-10005} pool-connect
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,305 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Parameters : [merchant-platform]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,305 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Types : [VARCHAR]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,306 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20001, rs-50008} query executed. 1.2159 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,306 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50008} open
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,307 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50008} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,307 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50008} Result: [merchant-platform, 123456, shanju-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,308 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50008} closed
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,308 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} clearParameters. 
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,308 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,328 DEBUG [DubboClientHandler-192.168.1.6:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:01:58,329 ERROR [http-nio-56020-exec-4][TokenEndpoint.java:169] - Handling error: NestedServletException, Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.shanjupay.user.convert.AccountConvert
org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.shanjupay.user.convert.AccountConvert
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1053)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter.successfulAuthentication(ClientCredentialsTokenEndpointFilter.java:131)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:240)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:679)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NoClassDefFoundError: Could not initialize class com.shanjupay.user.convert.AccountConvert
	at com.shanjupay.user.service.TenantServiceImpl.getAccountByUsername(TenantServiceImpl.java:521)
	at com.shanjupay.user.service.TenantServiceImpl.authentication(TenantServiceImpl.java:654)
	at com.shanjupay.user.service.TenantServiceImpl.login(TenantServiceImpl.java:710)
	at com.shanjupay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$5c82a28f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.shanjupay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$e0b11be2.login(<generated>)
	at com.shanjupay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$5c82a28f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.shanjupay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$e3a0da6a.login(<generated>)
	at org.apache.dubbo.common.bytecode.Wrapper3.invokeMethod(Wrapper3.java)
	at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
	at org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)
	at org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)
	at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:96)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:148)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)
	at org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)
	at org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	... 1 more
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:02:02,417 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:02:32,421 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:02:58,331 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xf52bce0e, L:/192.168.1.6:62670 - R:/192.168.1.6:20880]], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:02:58,333 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:03:02,427 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:03:17,286 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.1.6:63023, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:03:32,433 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:03:58,335 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xf52bce0e, L:/192.168.1.6:62670 - R:/192.168.1.6:20880]], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:03:58,336 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:04:02,439 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:04:17,288 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.1.6:63023, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:04:32,443 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:04:58,338 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xf52bce0e, L:/192.168.1.6:62670 - R:/192.168.1.6:20880]], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:04:58,339 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:05:02,449 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:05:17,289 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.1.6:63023, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:05:32,455 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:05:58,340 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xf52bce0e, L:/192.168.1.6:62670 - R:/192.168.1.6:20880]], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:05:58,342 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:06:02,459 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:06:17,294 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.1.6:63023, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:06:32,464 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:06:58,344 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xf52bce0e, L:/192.168.1.6:62670 - R:/192.168.1.6:20880]], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:06:58,345 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:02,468 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:17,296 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.1.6:63023, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:32,475 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,347 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xf52bce0e, L:/192.168.1.6:62670 - R:/192.168.1.6:20880]], dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,347 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,509 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,509 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Parameters : [merchant-platform]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,510 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Types : [VARCHAR]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,511 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20001, rs-50009} query executed. 1.2832 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,511 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50009} open
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,511 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50009} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,512 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50009} Result: [merchant-platform, 123456, shanju-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,512 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50009} closed
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,512 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} clearParameters. 
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,512 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,519 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,519 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Parameters : [merchant-platform]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,520 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Types : [VARCHAR]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,521 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20001, rs-50010} query executed. 1.4807 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,521 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50010} open
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,521 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50010} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,522 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50010} Result: [merchant-platform, 123456, shanju-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,522 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50010} closed
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,523 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} clearParameters. 
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,523 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,527 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,527 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Parameters : [merchant-platform]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,527 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Types : [VARCHAR]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,528 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20001, rs-50011} query executed. 1.0504 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,528 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50011} open
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,529 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50011} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,529 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50011} Result: [merchant-platform, 123456, shanju-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,529 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50011} closed
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,530 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} clearParameters. 
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,530 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,534 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,534 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Parameters : [merchant-platform]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,535 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} Types : [VARCHAR]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,536 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20001, rs-50012} query executed. 1.4226 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,536 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50012} open
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,536 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50012} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,537 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50012} Result: [merchant-platform, 123456, shanju-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,537 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20001, rs-50012} closed
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,538 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20001} clearParameters. 
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,538 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,554 DEBUG [DubboClientHandler-192.168.1.6:20880-thread-2][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.1.6
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:07:58,555 ERROR [http-nio-56020-exec-7][TokenEndpoint.java:169] - Handling error: NestedServletException, Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.shanjupay.user.convert.AccountConvert
org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.shanjupay.user.convert.AccountConvert
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1053)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter.successfulAuthentication(ClientCredentialsTokenEndpointFilter.java:131)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:240)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:679)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NoClassDefFoundError: Could not initialize class com.shanjupay.user.convert.AccountConvert
	at com.shanjupay.user.service.TenantServiceImpl.getAccountByUsername(TenantServiceImpl.java:521)
	at com.shanjupay.user.service.TenantServiceImpl.authentication(TenantServiceImpl.java:654)
	at com.shanjupay.user.service.TenantServiceImpl.login(TenantServiceImpl.java:710)
	at com.shanjupay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$5c82a28f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.shanjupay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$e0b11be2.login(<generated>)
	at com.shanjupay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$5c82a28f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.shanjupay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$e3a0da6a.login(<generated>)
	at org.apache.dubbo.common.bytecode.Wrapper3.invokeMethod(Wrapper3.java)
	at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
	at org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)
	at org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)
	at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:96)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:148)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)
	at org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)
	at org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	... 1 more
[shanjupay-uaa-service][${env:SERVER_PORT}] 2021-07-04 19:08:02,479 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
